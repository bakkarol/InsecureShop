name: Security Scanning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  dependency_check:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        
      - name: Create libs directory if it does not exist
        run: mkdir -p app/libs

      - name: Run OWASP Dependency-Check
        run: ./gradlew :app:dependencyCheckAnalyze --stacktrace --info
 
      - name: List Generated Report Files
        run: ls -l ${{github.workspace}}/app/build/reports/dependency-check

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v3
        with:
          name: Dependency Check report
          # path: ${{github.workspace}}/app/build/reports/dependency-check/dependency-check-report.html
          path: ${{github.workspace}}/reports/dependency-check-report.html
          
  # secrets_scanning:
    # runs-on: ubuntu-latest
    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v4
    #   # with:
    #   #   fetch-depth: 0
    # # - name: Secret Scanning
    # #   uses: trufflesecurity/trufflehog@main
    # #   with:
    # #     extra_args: --only-verified
    
    # - name: Run TruffleHog for secrets scanning
    #   uses: trufflesecurity/trufflehog@main
    #   with:
    #     scan_depth: 50  
    #     output_format: json
    #     output_file: trufflehog-output.json

    # - name: List Generated Report Files
    #   run: ls -R

    # - name: Upload Secrets Scanning Report
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: Secrets Scanning Report
    #     path: '**/*.json'
   
    # name: gitleaks
    # runs-on: ubuntu-latest

    # steps:
    #   - uses: actions/checkout@v2
    #     with:
    #       fetch-depth: 10
    #       ref: ${{ github.head_ref }}
    #   - name: trufflehog-actions-scan
    #     uses: edplato/trufflehog-actions-scan@master

